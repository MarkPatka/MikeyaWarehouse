// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MikeyaWarehouse.Infrastructure.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MikeyaWarehouse.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(MikeyaWarehouseDbContext))]
    [Migration("20250527053410_RenameColumnsToMeetConventions")]
    partial class RenameColumnsToMeetConventions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MikeyaWarehouse.Domain.ContractorsAggregate.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("ContractorId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Contractors", (string)null);
                });

            modelBuilder.Entity("MikeyaWarehouse.Domain.PalletAggregate.Pallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Pallets", (string)null);
                });

            modelBuilder.Entity("MikeyaWarehouse.Domain.WarehouseAggregate.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("WarehouseId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("MikeyaWarehouse.Domain.ContractorsAggregate.Contractor", b =>
                {
                    b.OwnsOne("MikeyaWarehouse.Domain.ContractorsAggregate.Entities.ContractorAdress", "Adress", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnName("ContractorAdressId");

                            b1.Property<int>("ContractorId")
                                .HasColumnType("integer");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("Id", "ContractorId");

                            b1.HasIndex("ContractorId")
                                .IsUnique();

                            b1.ToTable("ContractorsAdresses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ContractorId");

                            b1.OwnsOne("MikeyaWarehouse.Domain.Common.Entities.GeoCoordinates", "Coordinates", b2 =>
                                {
                                    b2.Property<int>("ContractorAdressId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("ContractorAdressContractorId")
                                        .HasColumnType("integer");

                                    b2.Property<double>("Latitude")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Latitude");

                                    b2.Property<double>("Longitude")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Longitude");

                                    b2.HasKey("ContractorAdressId", "ContractorAdressContractorId");

                                    b2.ToTable("ContractorsAdresses");

                                    b2.WithOwner()
                                        .HasForeignKey("ContractorAdressId", "ContractorAdressContractorId");
                                });

                            b1.Navigation("Coordinates");
                        });

                    b.OwnsMany("MikeyaWarehouse.Domain.ContractorsAggregate.Entities.Shipment", "Shipments", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("ShipmentId");

                            b1.Property<int>("ContractorId")
                                .HasColumnType("integer");

                            b1.Property<int>("Status")
                                .HasColumnType("integer");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");

                            b1.HasKey("Id", "ContractorId");

                            b1.HasIndex("ContractorId");

                            b1.ToTable("Shipments", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ContractorId");

                            b1.OwnsMany("MikeyaWarehouse.Domain.PalletAggregate.ValueObjects.PalletId", "PalletIds", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<int?>("ContractorId")
                                        .HasColumnType("integer");

                                    b2.Property<Guid>("ShipmentId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uuid")
                                        .HasColumnName("PalletId");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ShipmentId", "ContractorId");

                                    b2.ToTable("ShipmentPalletIds", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ShipmentId", "ContractorId");
                                });

                            b1.Navigation("PalletIds");
                        });

                    b.Navigation("Adress")
                        .IsRequired();

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("MikeyaWarehouse.Domain.PalletAggregate.Pallet", b =>
                {
                    b.OwnsMany("MikeyaWarehouse.Domain.PalletAggregate.Entities.ProductBox", "ProductBoxes", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("ProductBoxId");

                            b1.Property<Guid>("PalletId")
                                .HasColumnType("uuid");

                            b1.Property<int>("BoxStatus")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Expire")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("Production")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("Id", "PalletId");

                            b1.HasIndex("PalletId");

                            b1.ToTable("ProductBoxes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PalletId");

                            b1.OwnsMany("MikeyaWarehouse.Domain.PalletAggregate.Entities.Product", "Products", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .HasColumnType("integer")
                                        .HasColumnName("ProductId");

                                    b2.Property<Guid>("ProductBoxId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("PalletId")
                                        .HasColumnType("uuid");

                                    b2.Property<DateTime>("Expires")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<DateTime>("Production")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<int>("Status")
                                        .HasColumnType("integer");

                                    b2.HasKey("Id", "ProductBoxId", "PalletId");

                                    b2.HasIndex("ProductBoxId", "PalletId");

                                    b2.ToTable("Products", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ProductBoxId", "PalletId");

                                    b2.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.BarCode", "BarCode", b3 =>
                                        {
                                            b3.Property<int>("ProductId")
                                                .HasColumnType("integer");

                                            b3.Property<Guid>("ProductBoxId")
                                                .HasColumnType("uuid");

                                            b3.Property<Guid>("ProductPalletId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Text")
                                                .IsRequired()
                                                .HasColumnType("text")
                                                .HasColumnName("BarCode");

                                            b3.HasKey("ProductId", "ProductBoxId", "ProductPalletId");

                                            b3.ToTable("Products");

                                            b3.WithOwner()
                                                .HasForeignKey("ProductId", "ProductBoxId", "ProductPalletId");
                                        });

                                    b2.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.Dimensions", "Dimensions", b3 =>
                                        {
                                            b3.Property<int>("ProductId")
                                                .HasColumnType("integer");

                                            b3.Property<Guid>("ProductBoxId")
                                                .HasColumnType("uuid");

                                            b3.Property<Guid>("ProductPalletId")
                                                .HasColumnType("uuid");

                                            b3.Property<double>("Height")
                                                .HasColumnType("double precision")
                                                .HasColumnName("Height");

                                            b3.Property<double>("Length")
                                                .HasColumnType("double precision")
                                                .HasColumnName("Length");

                                            b3.Property<double>("Weight")
                                                .HasColumnType("double precision")
                                                .HasColumnName("Weight");

                                            b3.Property<double>("Width")
                                                .HasColumnType("double precision")
                                                .HasColumnName("Width");

                                            b3.HasKey("ProductId", "ProductBoxId", "ProductPalletId");

                                            b3.ToTable("Products");

                                            b3.WithOwner()
                                                .HasForeignKey("ProductId", "ProductBoxId", "ProductPalletId");
                                        });

                                    b2.Navigation("BarCode")
                                        .IsRequired();

                                    b2.Navigation("Dimensions")
                                        .IsRequired();
                                });

                            b1.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.BarCode", "Code", b2 =>
                                {
                                    b2.Property<Guid>("ProductBoxId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("ProductBoxPalletId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Text")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("BarCode");

                                    b2.HasKey("ProductBoxId", "ProductBoxPalletId");

                                    b2.ToTable("ProductBoxes");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductBoxId", "ProductBoxPalletId");
                                });

                            b1.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.Dimensions", "Dimensions", b2 =>
                                {
                                    b2.Property<Guid>("ProductBoxId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("ProductBoxPalletId")
                                        .HasColumnType("uuid");

                                    b2.Property<double>("Height")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Height");

                                    b2.Property<double>("Length")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Length");

                                    b2.Property<double>("Weight")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Weight");

                                    b2.Property<double>("Width")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Width");

                                    b2.HasKey("ProductBoxId", "ProductBoxPalletId");

                                    b2.ToTable("ProductBoxes");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductBoxId", "ProductBoxPalletId");
                                });

                            b1.Navigation("Code")
                                .IsRequired();

                            b1.Navigation("Dimensions")
                                .IsRequired();

                            b1.Navigation("Products");
                        });

                    b.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.Dimensions", "Dimensions", b1 =>
                        {
                            b1.Property<Guid>("PalletId")
                                .HasColumnType("uuid");

                            b1.Property<double>("Height")
                                .HasColumnType("double precision")
                                .HasColumnName("Height");

                            b1.Property<double>("Length")
                                .HasColumnType("double precision")
                                .HasColumnName("Length");

                            b1.Property<double>("Weight")
                                .HasColumnType("double precision")
                                .HasColumnName("Weight");

                            b1.Property<double>("Width")
                                .HasColumnType("double precision")
                                .HasColumnName("Width");

                            b1.HasKey("PalletId");

                            b1.ToTable("Pallets");

                            b1.WithOwner()
                                .HasForeignKey("PalletId");
                        });

                    b.Navigation("Dimensions")
                        .IsRequired();

                    b.Navigation("ProductBoxes");
                });

            modelBuilder.Entity("MikeyaWarehouse.Domain.WarehouseAggregate.Warehouse", b =>
                {
                    b.OwnsMany("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.BufferZone", "BufferZones", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnName("BufferZoneId");

                            b1.Property<int>("WarehouseId")
                                .HasColumnType("integer");

                            b1.Property<int>("Status")
                                .HasColumnType("integer");

                            b1.HasKey("Id", "WarehouseId");

                            b1.HasIndex("WarehouseId");

                            b1.ToTable("WarehouseBufferZones", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");

                            b1.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.Dimensions", "Dimensions", b2 =>
                                {
                                    b2.Property<int>("BufferZoneId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("BufferZoneWarehouseId")
                                        .HasColumnType("integer");

                                    b2.Property<double>("Height")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Height");

                                    b2.Property<double>("Length")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Length");

                                    b2.Property<double>("Weight")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Weight");

                                    b2.Property<double>("Width")
                                        .HasColumnType("double precision")
                                        .HasColumnName("Width");

                                    b2.HasKey("BufferZoneId", "BufferZoneWarehouseId");

                                    b2.ToTable("WarehouseBufferZones");

                                    b2.WithOwner()
                                        .HasForeignKey("BufferZoneId", "BufferZoneWarehouseId");
                                });

                            b1.OwnsOne("MikeyaWarehouse.Domain.Common.Entities.LoadCapacity", "LoadCapacity", b2 =>
                                {
                                    b2.Property<int>("BufferZoneId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("BufferZoneWarehouseId")
                                        .HasColumnType("integer");

                                    b2.Property<double>("MaxVolume")
                                        .HasColumnType("double precision");

                                    b2.Property<double>("MaxWeight")
                                        .HasColumnType("double precision");

                                    b2.HasKey("BufferZoneId", "BufferZoneWarehouseId");

                                    b2.ToTable("WarehouseBufferZones");

                                    b2.WithOwner()
                                        .HasForeignKey("BufferZoneId", "BufferZoneWarehouseId");
                                });

                            b1.Navigation("Dimensions")
                                .IsRequired();

                            b1.Navigation("LoadCapacity")
                                .IsRequired();
                        });

                    b.OwnsMany("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.Ramp", "Ramps", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnName("RampId");

                            b1.Property<int>("WarehouseId")
                                .HasColumnType("integer");

                            b1.Property<char>("Gate")
                                .HasColumnType("char(1)")
                                .IsFixedLength();

                            b1.Property<int>("Status")
                                .HasColumnType("integer");

                            b1.HasKey("Id", "WarehouseId");

                            b1.HasIndex("WarehouseId");

                            b1.ToTable("WarehouseRamps", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.OwnsMany("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.StorageZone", "StorageZones", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnName("StorageZoneId");

                            b1.Property<int>("WarehouseId")
                                .HasColumnType("integer");

                            b1.Property<char>("Code")
                                .HasColumnType("char(1)")
                                .IsFixedLength();

                            b1.HasKey("Id", "WarehouseId");

                            b1.HasIndex("WarehouseId");

                            b1.ToTable("StorageZones", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");

                            b1.OwnsOne("MikeyaWarehouse.Domain.Common.Entities.ClimatRegime", "Regime", b2 =>
                                {
                                    b2.Property<int>("StorageZoneId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("StorageZoneWarehouseId")
                                        .HasColumnType("integer");

                                    b2.HasKey("StorageZoneId", "StorageZoneWarehouseId");

                                    b2.ToTable("StorageZones");

                                    b2.WithOwner()
                                        .HasForeignKey("StorageZoneId", "StorageZoneWarehouseId");

                                    b2.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.HumidityRange", "HumidityRange", b3 =>
                                        {
                                            b3.Property<int>("ClimatRegimeStorageZoneId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("ClimatRegimeStorageZoneWarehouseId")
                                                .HasColumnType("integer");

                                            b3.Property<double>("Max")
                                                .HasColumnType("double precision")
                                                .HasColumnName("MaxHumidityRegime");

                                            b3.Property<double>("Min")
                                                .HasColumnType("double precision")
                                                .HasColumnName("MinHumidityRegime");

                                            b3.HasKey("ClimatRegimeStorageZoneId", "ClimatRegimeStorageZoneWarehouseId");

                                            b3.ToTable("StorageZones");

                                            b3.WithOwner()
                                                .HasForeignKey("ClimatRegimeStorageZoneId", "ClimatRegimeStorageZoneWarehouseId");
                                        });

                                    b2.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.TemperatureRange", "TemperatureRange", b3 =>
                                        {
                                            b3.Property<int>("ClimatRegimeStorageZoneId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("ClimatRegimeStorageZoneWarehouseId")
                                                .HasColumnType("integer");

                                            b3.Property<double>("Max")
                                                .HasColumnType("double precision")
                                                .HasColumnName("MaxTemperatureRegime");

                                            b3.Property<double>("Min")
                                                .HasColumnType("double precision")
                                                .HasColumnName("MinTemperatureRegime");

                                            b3.HasKey("ClimatRegimeStorageZoneId", "ClimatRegimeStorageZoneWarehouseId");

                                            b3.ToTable("StorageZones");

                                            b3.WithOwner()
                                                .HasForeignKey("ClimatRegimeStorageZoneId", "ClimatRegimeStorageZoneWarehouseId");
                                        });

                                    b2.Navigation("HumidityRange")
                                        .IsRequired();

                                    b2.Navigation("TemperatureRange")
                                        .IsRequired();
                                });

                            b1.OwnsMany("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.StorageRack", "StorageRacks", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .HasColumnType("integer")
                                        .HasColumnName("StorageRackId");

                                    b2.Property<int>("StorageZoneId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("WarehouseId")
                                        .HasColumnType("integer");

                                    b2.HasKey("Id", "StorageZoneId", "WarehouseId");

                                    b2.HasIndex("StorageZoneId", "WarehouseId");

                                    b2.ToTable("WarehouseRacks", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("StorageZoneId", "WarehouseId");

                                    b2.OwnsOne("MikeyaWarehouse.Domain.Common.Entities.LoadCapacity", "LoadCapacity", b3 =>
                                        {
                                            b3.Property<int>("StorageRackId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("StorageRackStorageZoneId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("StorageRackWarehouseId")
                                                .HasColumnType("integer");

                                            b3.Property<double>("MaxVolume")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("MaxWeight")
                                                .HasColumnType("double precision");

                                            b3.HasKey("StorageRackId", "StorageRackStorageZoneId", "StorageRackWarehouseId");

                                            b3.ToTable("WarehouseRacks");

                                            b3.WithOwner()
                                                .HasForeignKey("StorageRackId", "StorageRackStorageZoneId", "StorageRackWarehouseId");
                                        });

                                    b2.OwnsMany("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.StorageSection", "StorageSections", b3 =>
                                        {
                                            b3.Property<int>("Id")
                                                .HasColumnType("integer")
                                                .HasColumnName("StorageSectionId");

                                            b3.Property<int>("StorageRackId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("StorageZoneId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("WarehouseId")
                                                .HasColumnType("integer");

                                            b3.HasKey("Id", "StorageRackId", "StorageZoneId", "WarehouseId");

                                            b3.HasIndex("StorageRackId", "StorageZoneId", "WarehouseId");

                                            b3.ToTable("RackSections", (string)null);

                                            b3.WithOwner()
                                                .HasForeignKey("StorageRackId", "StorageZoneId", "WarehouseId");

                                            b3.OwnsMany("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.StorageBin", "StorageBins", b4 =>
                                                {
                                                    b4.Property<int>("Id")
                                                        .HasColumnType("integer")
                                                        .HasColumnName("StorageBinId");

                                                    b4.Property<int>("StorageSectionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("StorageRackId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("StorageZoneId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("WarehouseId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Status")
                                                        .HasColumnType("integer");

                                                    b4.HasKey("Id", "StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId");

                                                    b4.HasIndex("StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId");

                                                    b4.ToTable("SectionBins", (string)null);

                                                    b4.WithOwner()
                                                        .HasForeignKey("StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId");

                                                    b4.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.BarCode", "BinBarCode", b5 =>
                                                        {
                                                            b5.Property<int>("StorageBinId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageSectionId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageRackId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageZoneId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinWarehouseId")
                                                                .HasColumnType("integer");

                                                            b5.Property<string>("Text")
                                                                .IsRequired()
                                                                .HasColumnType("text")
                                                                .HasColumnName("BinBarCode");

                                                            b5.HasKey("StorageBinId", "StorageBinStorageSectionId", "StorageBinStorageRackId", "StorageBinStorageZoneId", "StorageBinWarehouseId");

                                                            b5.ToTable("SectionBins");

                                                            b5.WithOwner()
                                                                .HasForeignKey("StorageBinId", "StorageBinStorageSectionId", "StorageBinStorageRackId", "StorageBinStorageZoneId", "StorageBinWarehouseId");
                                                        });

                                                    b4.OwnsOne("MikeyaWarehouse.Domain.Common.ValueObjects.Dimensions", "Dimensions", b5 =>
                                                        {
                                                            b5.Property<int>("StorageBinId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageSectionId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageRackId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageZoneId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinWarehouseId")
                                                                .HasColumnType("integer");

                                                            b5.Property<double>("Height")
                                                                .HasColumnType("double precision")
                                                                .HasColumnName("Height");

                                                            b5.Property<double>("Length")
                                                                .HasColumnType("double precision")
                                                                .HasColumnName("Length");

                                                            b5.Property<double>("Weight")
                                                                .HasColumnType("double precision")
                                                                .HasColumnName("Weight");

                                                            b5.Property<double>("Width")
                                                                .HasColumnType("double precision")
                                                                .HasColumnName("Width");

                                                            b5.HasKey("StorageBinId", "StorageBinStorageSectionId", "StorageBinStorageRackId", "StorageBinStorageZoneId", "StorageBinWarehouseId");

                                                            b5.ToTable("SectionBins");

                                                            b5.WithOwner()
                                                                .HasForeignKey("StorageBinId", "StorageBinStorageSectionId", "StorageBinStorageRackId", "StorageBinStorageZoneId", "StorageBinWarehouseId");
                                                        });

                                                    b4.OwnsOne("MikeyaWarehouse.Domain.Common.Entities.LoadCapacity", "LoadCapacity", b5 =>
                                                        {
                                                            b5.Property<int>("StorageBinId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageSectionId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageRackId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinStorageZoneId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("StorageBinWarehouseId")
                                                                .HasColumnType("integer");

                                                            b5.Property<double>("MaxVolume")
                                                                .HasColumnType("double precision");

                                                            b5.Property<double>("MaxWeight")
                                                                .HasColumnType("double precision");

                                                            b5.HasKey("StorageBinId", "StorageBinStorageSectionId", "StorageBinStorageRackId", "StorageBinStorageZoneId", "StorageBinWarehouseId");

                                                            b5.ToTable("SectionBins");

                                                            b5.WithOwner()
                                                                .HasForeignKey("StorageBinId", "StorageBinStorageSectionId", "StorageBinStorageRackId", "StorageBinStorageZoneId", "StorageBinWarehouseId");
                                                        });

                                                    b4.OwnsMany("MikeyaWarehouse.Domain.PalletAggregate.ValueObjects.ProductBoxId", "StoredBoxes", b5 =>
                                                        {
                                                            b5.Property<int>("Id")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("integer");

                                                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b5.Property<int>("Id"));

                                                            b5.Property<int>("StorageBinId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int?>("StorageRackId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int?>("StorageSectionId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int?>("StorageZoneId")
                                                                .HasColumnType("integer");

                                                            b5.Property<Guid>("Value")
                                                                .HasColumnType("uuid")
                                                                .HasColumnName("BoxId");

                                                            b5.Property<int?>("WarehouseId")
                                                                .HasColumnType("integer");

                                                            b5.HasKey("Id");

                                                            b5.HasIndex("StorageBinId", "StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId");

                                                            b5.ToTable("StorageBinBoxes", (string)null);

                                                            b5.WithOwner()
                                                                .HasForeignKey("StorageBinId", "StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId");
                                                        });

                                                    b4.OwnsOne("MikeyaWarehouse.Domain.PalletAggregate.ValueObjects.PalletId", "StoredPalletId", b5 =>
                                                        {
                                                            b5.Property<int>("Id")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("integer");

                                                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b5.Property<int>("Id"));

                                                            b5.Property<int>("StorageBinId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int?>("StorageRackId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int?>("StorageSectionId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int?>("StorageZoneId")
                                                                .HasColumnType("integer");

                                                            b5.Property<Guid>("Value")
                                                                .HasColumnType("uuid")
                                                                .HasColumnName("PalletId");

                                                            b5.Property<int?>("WarehouseId")
                                                                .HasColumnType("integer");

                                                            b5.HasKey("Id");

                                                            b5.HasIndex("StorageBinId", "StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId")
                                                                .IsUnique();

                                                            b5.ToTable("StorageBinPallets", (string)null);

                                                            b5.WithOwner()
                                                                .HasForeignKey("StorageBinId", "StorageSectionId", "StorageRackId", "StorageZoneId", "WarehouseId");
                                                        });

                                                    b4.Navigation("BinBarCode")
                                                        .IsRequired();

                                                    b4.Navigation("Dimensions")
                                                        .IsRequired();

                                                    b4.Navigation("LoadCapacity")
                                                        .IsRequired();

                                                    b4.Navigation("StoredBoxes");

                                                    b4.Navigation("StoredPalletId");
                                                });

                                            b3.Navigation("StorageBins");
                                        });

                                    b2.Navigation("LoadCapacity")
                                        .IsRequired();

                                    b2.Navigation("StorageSections");
                                });

                            b1.Navigation("Regime")
                                .IsRequired();

                            b1.Navigation("StorageRacks");
                        });

                    b.OwnsOne("MikeyaWarehouse.Domain.WarehouseAggregate.Entities.WarehouseAdress", "Adress", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<int>("WarehouseId")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("WarehouseId")
                                .IsUnique();

                            b1.ToTable("WarehouseAdresses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.OwnsMany("MikeyaWarehouse.Domain.PalletAggregate.ValueObjects.PalletId", "PalletIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("PalletId");

                            b1.Property<int>("WarehouseId")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("WarehouseId");

                            b1.ToTable("WarehousePalletIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("WarehouseId");
                        });

                    b.Navigation("Adress")
                        .IsRequired();

                    b.Navigation("BufferZones");

                    b.Navigation("PalletIds");

                    b.Navigation("Ramps");

                    b.Navigation("StorageZones");
                });
#pragma warning restore 612, 618
        }
    }
}
